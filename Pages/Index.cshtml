@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<div id="entrance">
    <label for="nick">Enter your nickname:</label>
    <input type="text" id="nick" />
    <button onclick="continueToVote()">Continue</button>
</div>

@*<div id="chat" style="display: none">
        <h3 id="spn-nick"></h3>
        <form id="frm-send-message" action="#">
            <label for="message">Message:</label>
            <input type="text" id="message" />
            <input type="submit" id="send" value="Send" class="send" />
        </form>
        <div class="clear">
        </div>
        <ul id="messages"></ul>
    </div>*@


<div id="healthCheck" style="display: none">
    <h3 id="spn-nick"></h3>
    <h3 id="votes-display"></h3>
    
    <div id="adminButtons" style="display: none">
        <input type="button" id="SendClearButton" value="Clear" />
        <input type="button" id="voteNowButton" value="Enable Voting" />
    </div>

    <div id="votingButtons" style="display: none">
        <input type="button" id="HappyButton" value="😃" />
        <input type="button" id="MehButton" value="😐" />
        <input type="button" id="SadButton" value="☹️" />
    </div>

    <h4>Health Check Messages:</h4>
    <ul id="health-messages"></ul>
</div>

<script src="lib/signalr/signalr.js"></script>

<script>

    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/health")
        .build();

    connection.start().catch(err => console.error(err.toString()));

    connection.on('MemberJoined',
        (name) => {
            let msgElement = document.createElement('em');
            msgElement.innerText = name + ` joined the session`;

            let li = document.createElement('li');
            li.appendChild(msgElement);

            $('#health-messages').append(li);
        });

    connection.on('SendClear',
        () => {
            let msgElement = document.createElement('em');
            msgElement.innerText = `Clear Rx'd`;

            let li = document.createElement('li');
            li.appendChild(msgElement);

            $('#health-messages').append(li);
        });

    connection.on('VotingEnabled',
        () => {
            $('#votingButtons').show();
        });

    //connection.on('Attendees',
    //    (attendees) => {

    //        let people = $.parseJSON(attendees);
    //        let allPeopleString = people.each(p => p.name);

    //        let msgElement = document.createElement('em');
    //        msgElement.innerText = `Currently online: ` + allPeopleString;

    //        let li = document.createElement('li');
    //        li.appendChild(msgElement);

    //        $('#health-messages').append(li);
    //    });

    connection.on('SendVotes',
        (votes) => {

            let v = $.parseJSON(votes);

            let votesDisplay = document.getElementById('votes-display');
            votesDisplay.innerHTML = "😃" + v.Happy + "<br/>😐" + v.Meh + "<br/>☹️" + v.Sad;

            let msgElement = document.createElement('em');
            msgElement.innerText = `Vote Update Rx'd` + votes;

            let li = document.createElement('li');
            li.appendChild(msgElement);

            $('#health-messages').append(li);
        });

    document.getElementById('SendClearButton').addEventListener('click', event => {
        //connection.invoke('SendClear');
        sendClear();
        event.preventDefault();
    });

    document.getElementById('voteNowButton').addEventListener('click', event => {
        sendEnableVoting();
        event.preventDefault();
    });

    document.getElementById('HappyButton').addEventListener('click', event => {
        let nick = $('#spn-nick').text();
        sendVote(nick, "happy");
        event.preventDefault();
    });

    document.getElementById('SadButton').addEventListener('click', event => {
        let nick = $('#spn-nick').text();
        sendVote(nick, "sad");
        event.preventDefault();
    });

    document.getElementById('MehButton').addEventListener('click', event => {
        let nick = $('#spn-nick').text();
        sendVote(nick, "meh");
        event.preventDefault();
    });

    function sendVote(name, vote) {

        var payload = {
            name: name,
            vote: vote
        }

        var settings = getAjaxPost("/api/vote", payload);
        var result = handleAjaxRequest(settings);
    }

    function sendClear() {
        var settings = getAjaxPost("/api/vote/clear");
        var result = handleAjaxRequest(settings);
    }

    function sendEnableVoting() {
        var settings = getAjaxPost("/api/vote/enable");
        var result = handleAjaxRequest(settings);
    }

    function sendMemberJoined() {
        let nick = $('#spn-nick').text();

        var settings = getAjaxPost("/api/vote/join", nick);
        var result = handleAjaxRequest(settings);
    }

    function getAjaxPost(handler, data) {
        return {
            type: "POST",
            url: handler,
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8"
        };
    }

    function handleAjaxRequest(request) {
        return $.ajax(request)
            .then(
                function success(result) { return result; },
                function failure(result) {
                    if (result.status === 401) {
                        alert("401");
                    } else {
                        return result;
                    }
                });
    }

    function continueToVote() {
        $('#spn-nick').text($('#nick').val());
        $('#entrance').hide();
        $('#healthCheck').show();

        let nick = $('#spn-nick').text();
        if (nick === "Admin" || nick === "admin") {
            $('#adminButtons').show();
        }

        sendMemberJoined();
    }
</script>

<script>
            //const connection = new signalR.HubConnectionBuilder()
            //    .withUrl("/chat")
            //    .build();

            //connection.start().catch(err => console.error(err.toString()));

            //connection.on('Send', (nick, message) => {
            //    appendLine(nick, message);
            //});

            //document.getElementById('frm-send-message').addEventListener('submit', event => {
            //    let message = $('#message').val();
            //    let nick = $('#spn-nick').text();

            //    $('#message').val('');

            //    connection.invoke('Send', nick, message);
            //    event.preventDefault();
            //});

            //function appendLine(nick, message, color) {
            //    let nameElement = document.createElement('strong');
            //    nameElement.innerText = `${nick}:`;

            //    let msgElement = document.createElement('em');
            //    msgElement.innerText = ` ${message}`;

            //    let li = document.createElement('li');
            //    li.appendChild(nameElement);
            //    li.appendChild(msgElement);

            //    $('#messages').append(li);
            //};

            //function continueToChat() {
            //    $('#spn-nick').text($('#nick').val());
            //    $('#entrance').hide();
            //    $('#chat').show();
            //}
</script>